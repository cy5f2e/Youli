{"version":3,"sources":["actions/PlayerActions.js","component/AddPlayer.js","component/Player.js","App.js","reportWebVitals.js","reducers/PlayersReducer.js","reducers/RootReducer.js","Store.js","index.js"],"names":["PLAYER_ADD","PLAYER_DELETE","AddPlayer","onClose","dispatch","useDispatch","useState","data","setData","handleChange","ev","name","value","prev","Segment","Form","size","Input","label","onChange","Button","content","color","onClick","points","undefined","type","payload","setTimeout","Player","allPlayers","useSelector","state","players","add","setAdd","primary","Table","celled","textAlign","Header","Row","HeaderCell","negative","Body","map","d","Cell","id","App","Container","fluid","as","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PlayersReducer","action","uuidv4","entryState","index","findIndex","s","splice","RootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.b685e63a.chunk.js","sourcesContent":["export const PLAYER_ADD = 'PLAYER_ADD';\nexport const PLAYER_DELETE = 'PLAYER_DELETE';\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Segment } from 'semantic-ui-react';\nimport { PLAYER_ADD } from '../actions/PlayerActions';\n\nconst AddPlayer = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n\n  function handleChange(ev, { name, value }) {\n    setData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n\n  function handleAddPlayer() {\n    const { name, points } = data;\n\n    if (name === undefined || points === undefined) {\n      return;\n    }\n\n    dispatch({\n      type: PLAYER_ADD,\n      payload: {\n        name: name,\n        points: points,\n      },\n    });\n\n    setTimeout(() => onClose(), 500)\n  }\n\n  return (\n    <Segment>\n      <Form size=\"small\">\n        <Form.Input\n          label=\"Name\"\n          name=\"name\"\n          onChange={handleChange}\n        />\n        <Form.Input\n          label=\"Score\"\n          name=\"points\"\n          onChange={handleChange}\n        />\n        <Form.Button\n          content=\"Submit\"\n          color=\"green\"\n          onClick={handleAddPlayer}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default AddPlayer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Table } from 'semantic-ui-react';\nimport { PLAYER_DELETE } from '../actions/PlayerActions';\nimport AddPlayer from './AddPlayer';\n\nconst Player = () => {\n  const dispatch = useDispatch();\n  const allPlayers = useSelector((state) => state.players);\n  const [add, setAdd] = useState(false);\n\n  function handleDelete(id) {\n    dispatch({\n      type: PLAYER_DELETE,\n      payload: {\n        id: id,\n      },\n    });\n  }\n\n  function handleClose() {\n    setAdd(false);\n  }\n\n  return (\n    <>\n      <Button\n        content=\"Add Player Score\"\n        primary\n        onClick={() => setAdd(!add)}\n      />\n      <br />\n      {add && <AddPlayer onClose={handleClose} />}\n      {allPlayers && (\n        <>\n          <Table celled textAlign=\"center\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell content=\"ID\" negative />\n                <Table.HeaderCell content=\"Name\" />\n                <Table.HeaderCell content=\"PTS\" />\n                <Table.HeaderCell content=\"Action\" />\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {allPlayers.map((d) => (\n                <Table.Row key={`${d.id}-${d.name}`}>\n                  <Table.Cell content={d.id} />\n                  <Table.Cell content={d.name} />\n                  <Table.Cell content={d.points} />\n                  <Table.Cell>\n                    <Button\n                      content=\"Delete\"\n                      color=\"red\"\n                      onClick={() => handleDelete(d.id)}\n                    />\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Player;\n","import { Container, Header } from 'semantic-ui-react';\nimport Player from './component/Player';\n\nconst App = () => {\n  const title = 'Game No.24';\n\n  return (\n    <Container fluid>\n      <Header as=\"h1\">{title}</Header>\n      <Player />\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuidv4 } from 'uuid';\nimport { PLAYER_ADD, PLAYER_DELETE } from '../actions/PlayerActions';\n\nconst PlayersReducer = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case PLAYER_ADD:\n      return [...state, {\n        id: uuidv4(),\n        name: payload.name,\n        points: payload.points,\n      }];\n\n    case PLAYER_DELETE:\n      const entryState = [...state];\n      const index = entryState.findIndex((s) => s.id === payload.id);\n      entryState.splice(index, 1);\n\n      return [...entryState];\n\n    default:\n      return state;\n  }\n};\n\nexport default PlayersReducer;\n","import { combineReducers } from 'redux';\nimport PlayersReducer from './PlayersReducer';\n\nconst RootReducer = combineReducers({\n  players: PlayersReducer,\n});\n\nexport default RootReducer;\n","import { createStore } from 'redux';\n// dev-tool\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport RootReducer from './reducers/RootReducer';\n\n// Global State\nconst store = createStore(RootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport Store from './Store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}